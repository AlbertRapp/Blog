{
  "hash": "e4664ac2b51c970226dd454fc4f702f8",
  "result": {
    "markdown": "---\ntitle: How to embed a Shiny app into your blog posts\nformat: hugo\nauthor: ''\ndate: '2022-05-09'\nslug: []\ncategories: []\ntags: ['shorts', 'shiny']\ndescription: This is a one-minute blog post to share how to incorporate Shiny apps in blog posts.\nhideToc: no\nenableToc: no\nenableTocContent: no\ntocFolding: no\ntocPosition: inner\ntocLevels:\n  - h2\n  - h3\n  - h4\nseries: ''\nimage: ''\nlibraries:\n  - mathjax\n---\n\n::: {.cell}\n\n:::\n\n\nToday's a short blog post.\nIt's mainly for sharing a cool trick I just learned.\n\nHere's a simple template to incorporate your Shiny app into an HTML file.\nFor instance, you can incorporate your shiny app into your blog post like I do here.\nSimply exchange the src argument by your Shiny app's URL and then you're good to go.\nHere, I use the app that I have [shown you a couple of months ago](https://albert-rapp.de/post/2022-01-17-drawing-a-ggplot-interactively/).\n\n```\n<iframe src=\"https://rappa.shinyapps.io/interactive-ggplot\" data-external=\"1\" width=\"925px\" height=\"800px\">\n</iframe>\n```\n\nFrom what I could tell, this is same code that `knitr::include_app()` drops.\nBut including the `iframe` manually let's you adjust the width **and** height of your\nframe.\nBeware that you will have to choose the dimensions large enough for your Shiny app.\n\nUPDATE: Originally, I had demonstrated the above code chunk here. \nBut that causes unnecessary traffic on my shinyapps.io account, so I removed the demo.\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}