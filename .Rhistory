y = seq(0.0, 1, length.out = 5),
label = "Let's talk cash <span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span> "
)
tib %>%
ggplot(aes(x, y, label = label)) +
geom_richtext(family = tib$family, size = 13, hjust = 0, col = 'dodgerblue4', label.colour = NA) +
coord_cartesian(xlim = c(0, 1), ylim = c(0, 1)) +
theme_void()
tib <- tibble(
family = c('firasans', 'lora', 'lobster', 'anton', 'syne'),
x = 0,
y = seq(0.0, 1, length.out = 5),
label = "Let's talk cash <span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span> "
)
tib %>%
ggplot(aes(x, y, label = label)) +
geom_richtext(family = tib$family, size = 16, hjust = 0, col = 'dodgerblue4', label.colour = NA) +
coord_cartesian(xlim = c(0, 1), ylim = c(0, 1)) +
theme_void()
tibble(x = runif(10), y = runif(10)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext()
tibble(x = runif(10), y = runif(10)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA) +
theme_minimal()
tibble(x = runif(10), y = runif(10)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(10), y = runif(10)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(10), y = runif(10)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 10, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "&#xf651")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "&#xf651")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA, family = 'fa-solid'
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "&#xf651")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA, family = 'fa-solid'
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(
size = 10, label.colour = NA, fill = NA
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(
size = 12, label.colour = NA, fill = NA
) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'> &#xf651;</span>")) +
geom_richtext(size = 12, label.colour = NA, fill = NA) +
theme_minimal()
warnings()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'x&#xf651;</span>")) +
geom_richtext(size = 12, label.colour = NA, fill = NA) +
theme_minimal()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid; color: dodgerblue4'>&#xf651;</span>")) +
geom_richtext(size = 12, label.colour = NA, fill = NA) +
theme_minimal()
tib <- tibble(
family = c('firasans', 'lora', 'lobster', 'anton', 'syne'),
x = 0,
y = seq(0.0, 1, length.out = 5),
label = "Let's talk cash <span style='font-family:fa-solid'>&#xf651;</span>"
)
tib %>%
ggplot(aes(x, y, label = label)) +
geom_richtext(family = tib$family, size = 16, hjust = 0, col = 'dodgerblue4', label.colour = NA) +
coord_cartesian(xlim = c(0, 1), ylim = c(-0.1, 1.1)) +
theme_void()
tibble(x = runif(25), y = runif(25)) %>%
ggplot(aes(x, y, label = "<span style='font-family:fa-solid;'>&#xf651;</span>")) +
geom_richtext(size = 12, label.colour = NA, fill = NA, col = 'dodgerblue4',) +
theme_minimal()
ggsave('bla.png')
blogdown::serve_site()
blogdown::new_post('functional-programming-when-geoms-are-not-vectorized', .ext = '.Rmarkdown')
blogdown::new_post('functional-programming-when-geoms-are-not-vectorized', ext = '.Rmarkdown')
blogdown::serve_site()
library(tidyverse)
tribble(
~x, ~xend, ~y, ~yend, ~size,
0, 1, 0, 1, 1,
1, 2, 1, 1, 2
) %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size)) +
geom_segment()
tribble(
~x, ~xend, ~y, ~yend, ~size,
0, 1, 0, 1, 1,
1, 2, 1, 1, 2
) %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size)) +
geom_segment() +
scale_size_identity()
theme_set(theme_minimal())
tribble(
~x, ~xend, ~y, ~yend, ~size,
0, 1, 0, 1, 1,
1, 2, 1, 1, 2
) %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size)) +
geom_segment() +
scale_size_identity()
tribble(
~x, ~xend, ~y, ~yend, ~size,
0, 1, 0, 1, 1,
1, 2, 1, 1, 5
) %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size)) +
geom_segment(col = 'dodgerblue4') +
scale_size_identity()
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_segment(col = 'dodgerblue4', size = tib$size_col)
tib <- tribble(
~x, ~xend, ~y, ~yend, ~size_col,
0, 1, 0, 1, 1,
1, 2, 1, 1, 5
)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size_col)) +
geom_segment(col = 'dodgerblue4') +
scale_size_identity()
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_segment(col = 'dodgerblue4', size = tib$size_col)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_segment(col = 'dodgerblue4', size = tib$size_col)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 2)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 1)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 0.8)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = -0.8)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 0.8)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 0.5)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 0.6)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = c(-0.3, 0.6))
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, curvature = c(-0.3, 0.6))) +
geom_curve(
col = 'dodgerblue4',
size = tib$size_col
)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
aes(curvature = c(-0.3, 0.6)),
col = 'dodgerblue4',
size = tib$size_col
)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1),
col = 'dodgerblue4',
size = tib$size_col,
curvature = -0.3
)
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1),
col = 'dodgerblue4',
size = tib$size_col,
curvature = -0.3
)
ggplot(mapping = aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1),
col = 'dodgerblue4',
size = tib$size_col,
curvature = -0.3
)
ggplot(mapping = aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1),
col = 'dodgerblue4',
size = tib$size_col[1],
curvature = -0.3
)
ggplot(mapping = aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1),
col = 'dodgerblue4',
size = tib$size_col[1],
curvature = -0.3
) +
geom_curve(
data = slice(tib, 2),
col = 'dodgerblue4',
size = tib$size_col[2],
curvature = 0.6
)
tib <- tib %>% mutate(curvature = c(-0.3, 0.6))
tib
tib %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6
))
ggplot() +
curve_layers[[1]]
curve_layers <- tib %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6
))
curve_layers
ggplot() +
curve_layers[[1]]
curve_layers <- tib %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
curve_layers
ggplot() +
curve_layers[[1]]
ggplot() +
curve_layers[1] +
curve_layers[[2]]
ggplot() +
curve_layers[1] +
curve_layers[2]
ggplot() +
curve_layers
ggplot() +
curve_layers
ggplot() +
curve_layers +
annotate('point', x = 1, y = 1)
ggplot() +
curve_layers
n_curves <- 10
curve_layers <- tibble(
x = runif(N),
y = runif(N),
xend = runif(N),
yend = runif(N),
size = runif(N, 0, 2),
curvature = runif(N, -1, 1)
) %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
ggplot() + curve_layers
n_curves <- 10
curve_layers <- tibble(
x = runif(n_curves),
y = runif(n_curves),
xend = runif(n_curves),
yend = runif(n_curves),
size = runif(n_curves, 0, 2),
curvature = runif(n_curves, -1, 1)
) %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
ggplot() + curve_layers
n_curves <- 25
curve_layers <- tibble(
x = runif(n_curves),
y = runif(n_curves),
xend = runif(n_curves),
yend = runif(n_curves),
size = runif(n_curves, 0, 2),
curvature = runif(n_curves, -1, 1)
) %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
ggplot() + curve_layers
n_curves <- 50
curve_layers <- tibble(
x = runif(n_curves),
y = runif(n_curves),
xend = runif(n_curves),
yend = runif(n_curves),
size = runif(n_curves, 0, 2),
curvature = runif(n_curves, -1, 1)
) %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
ggplot() + curve_layers
combine_gg_elements(ggplot(), curve_layers)
combine_gg_elements <- function(...) {
Reduce(`+`, list(...))
}
combine_gg_elements(ggplot(), curve_layers)
# Enter your code in this chunk.
# Never overwrite the first line (here {r "1_a"}) of a chunk
123 + 257
options(repos = c(skranz = 'https://skranz.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
install.packages("RTutor")
hint()
y <- 8
x * y
stats()
r <- sqrt(123456789)
stats()
stats()
awards()
(0.1+0.2-0.3)*10000000000000000000
c(4,2,73)
# Chunk 1
knitr::opts_chunk$set(collapse = T)
Sys.setenv(lang = 'EN')
# Chunk 2
library(tidyverse)
theme_set(theme_minimal())
tib <- tribble(
~x, ~xend, ~y, ~yend, ~size_col,
0, 1, 0, 1, 1,
1, 2, 1, 1, 5
)
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend, size = size_col)) +
geom_segment(col = 'dodgerblue4') +
scale_size_identity()
# Chunk 4
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(col = 'dodgerblue4', size = tib$size_col, curvature = 0.6)
# Chunk 5
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
col = 'dodgerblue4',
size = tib$size_col,
curvature = c(-0.3, 0.6) # two curves, two different curvatures
)
# Chunk 6
tib %>%
ggplot(aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
aes(curvature = c(-0.3, 0.6)),
col = 'dodgerblue4',
size = tib$size_col
)
# Chunk 7
ggplot(mapping = aes(x = x, xend = xend, y = y, yend = yend)) +
geom_curve(
data = slice(tib, 1), # first row of tib
col = 'dodgerblue4',
size = tib$size_col[1], # one size only
curvature = -0.3
) +
geom_curve(
data = slice(tib, 2), # second row of tib
col = 'dodgerblue4',
size = tib$size_col[2], # other size
curvature = 0.6
)
# Chunk 8
tib <- tib %>% mutate(curvature = c(-0.3, 0.6))
tib
# Chunk 9
curve_layers <- tib %>%
pmap(~geom_curve(
mapping = aes(x = ..1, xend = ..2, y = ..3, yend = ..4),
size = ..5,
curvature = ..6,
col = 'dodgerblue4'
))
curve_layers
# Chunk 10
ggplot() +
curve_layers
# Chunk 11
n_curves <- 50
curve_layers <- tibble(
x = runif(n_curves),
y = runif(n_curves),
xend = runif(n_curves),
yend = runif(n_curves),
size = runif(n_curves, 0, 2),
curvature = runif(n_curves, -1, 1)
) %>%
pmap(~geom_curve(
mapping = aes(x = x, xend = xend, y = y, yend = yend),
size = szoe,
curvature = curvature,
col = 'dodgerblue4'
))
ggplot() + curve_layers
# Chunk 12
combine_gg_elements <- function(...) {
Reduce(`+`, list(...))
}
combine_gg_elements(ggplot(), curve_layers)
blogdown::serve_site()
blogdown::new_post('Recreating-the-SWD-look', ext = '.Rmarkdown')
library(tidyverse)
dat <- tibble(
id = 1:19,
fulfilled = c(803, 865, 795, 683, 566, 586, 510, 436, 418, 364, 379, 372, 374, 278, 286, 327, 225, 222, 200),
accuracy = c(86, 80, 84, 82, 86, 80, 80, 93, 88, 87, 85, 85, 83, 94, 86, 78, 89, 88, 91),
error = c(10, 14, 10, 14, 10, 16, 15, 6, 11, 7, 12, 13, 8, 4, 12, 12, 7, 10, 7),
null = 100 - accuracy - error
) %>%
mutate(across(accuracy:null, ~. / 100))
dat
library(tidyverse)
dat <- tibble(
id = 1:19,
fulfilled = c(803, 865, 795, 683, 566, 586, 510, 436, 418, 364, 379, 372, 374, 278, 286, 327, 225, 222, 200),
accuracy = c(86, 80, 84, 82, 86, 80, 80, 93, 88, 87, 85, 85, 83, 94, 86, 78, 89, 88, 91),
error = c(10, 14, 10, 14, 10, 16, 15, 6, 11, 7, 12, 13, 8, 4, 12, 12, 7, 10, 7),
null = 100 - accuracy - error
) %>%
mutate(across(accuracy:null, ~. / 100))
dat
dat_long <- dat %>%
pivot_longer(
cols = accuracy:null,
names_to = 'type',
values_to = 'percent'
)
dat_long %>%
ggplot(aes(id, percent, fill = factor(type, levels = c('null', 'accuracy', 'error')))) +
geom_col() +
labs(
title = 'Warehouse Accuracy Rates',
x = 'Warehouse ID',
y = '% of total orders',
fill = element_blank()
) +
scale_y_continuous(labels = ~scales::percent(., accuracy = 1), breaks = seq(0, 1, 0.1))
blogdown:::preview_site()
