{
  "hash": "90a3a8fcf19b6904304e387b9fbcc24e",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ ggplot2 3.3.6     ✔ purrr   0.3.4\n✔ tibble  3.1.7     ✔ dplyr   1.0.9\n✔ tidyr   1.2.0     ✔ stringr 1.4.0\n✔ readr   2.1.2     ✔ forcats 0.5.1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sysfonts\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: showtextdb\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggtext)\nshowtext_opts(dpi = 300)\nshowtext_auto()\nfont_add_google('Fira Sans', 'general_text')\nfont_add_google('Oleo Script', 'title_text')\n\ncamcorder::gg_record(\n  dir = 'img',\n  width = 297, # A4 paper\n  height = 210,\n  unit = 'mm',\n  dpi = 300\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrecorded_followers <- read_rds('followers.rds') %>% \n  mutate(type = 'recorded')\n\n\ntwitter_registration <- lubridate::make_datetime(2021, 7, 19, 9)\nfirst_recorded_date <- recorded_followers[[1, 'time']] \nfirst_recorded_followers <- recorded_followers[[1, 'followers']] \ndays_to_first_record <- as.numeric(first_recorded_date - twitter_registration) \n\ninterpolated_followers <- tibble(\n  time = twitter_registration + lubridate::days(0:floor(days_to_first_record)),\n  followers = floor(seq_along(time) * first_recorded_followers / days_to_first_record)\n) %>% \n  mutate(type = 'interpolated')\n\nfollowers <- bind_rows(interpolated_followers, recorded_followers)\n\n\ncolor_palette <- thematic::okabe_ito(8)\naxis_color <- 'grey80'\ninterpolated_color <- 'grey40'\nSys.setlocale(\"LC_ALL\",\"English\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in Sys.setlocale(\"LC_ALL\", \"English\"): OS reports request to set locale\nto \"English\" cannot be honored\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"\"\n```\n:::\n\n```{.r .cell-code}\nbase_timeline <- followers %>% \n  ggplot(aes(time, followers)) +\n  geom_line(aes(linetype = type), size = 1, col = interpolated_color) +\n  annotate(\n    'rect',\n    xmin = twitter_registration,\n    xmax = first_recorded_date,\n    ymin = 0,\n    ymax = first_recorded_followers,\n    fill = interpolated_color,\n    alpha = 0.2,\n    col = interpolated_color,\n    linetype = 3\n  ) +\n  annotate(\n    'richtext',\n    x = first_recorded_date,\n    y = 0,\n    hjust = 1.0,\n    vjust = -0.1,\n    family = 'general_text',\n    color = interpolated_color,\n    label.colour = NA,\n    fill = NA,\n    label = '**Mysterious wonderland:**<br>This is the time before <br> I started tracking <br>followers automatically'\n  ) +\n  scale_linetype_manual(values = c(2, 1)) + \n  scale_x_datetime(\n    date_labels = '%b %Y'\n  ) +\n  coord_cartesian(\n    xlim = c(twitter_registration, make_datetime(2022, 6, 15)),\n    expand = F, \n    clip = 'off'\n  ) +\n  labs(\n    x = element_blank(),\n    y = 'FOLLOWERS',\n    title = 'Celebrating 1000 followers'\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = 'none',\n    text = element_text(\n      size = 20, \n      family = 'general_text',\n      color = axis_color\n    ),\n    axis.text = element_text(\n      family = 'general_text',\n      color = axis_color\n    ),\n    axis.title.y = element_text(\n      hjust = 1,\n      color = axis_color,\n    ),\n    panel.grid.minor = element_blank(),\n    plot.title.position = 'plot'\n  )\n\nbase_timeline <- base_timeline + \n  annotate(\n    'point',\n    x = make_datetime(2022, 5, 5, 15),\n    y = 1000,\n    size = 5.5,\n    col = interpolated_color\n  ) +\n  annotate(\n    'richtext',\n    family = 'general_text',\n    x = make_datetime(2022, 5, 10),\n    y = 1000,\n    hjust = 0,\n    vjust = 1.05,\n    lineheight = 1,\n    size = 4,\n    col = interpolated_color,\n    label.colour = NA,\n    label = 'reached 1000<br>on **May 05, 2022**'\n  )\n```\n:::\n\n\n\nFind most popular blog posts\n\n\n::: {.cell fig.showtext='true'}\n\n```{.r .cell-code}\nlibrary(rtweet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'rtweet'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    flatten\n```\n:::\n\n```{.r .cell-code}\nkeyring::keyring_unlock('system', 'dummy_password')\nauth <- rtweet::rtweet_app(\n  bearer_token = keyring::key_get('twitter-bearer-token')\n)\nauth_as(auth)\n\ntl <- rtweet::get_timeline('rappa753', n = 1000)\ntl_slice <- tl %>% slice_max(favorite_count, n = 5) %>% \n  select(created_at, full_text, favorite_count, retweet_count) \n\n\npop_tweets <- tl_slice %>%\n  rename(time = created_at) %>%\n  mutate(\n    ind = map_dbl(time, ~ which.min(abs(followers$time - .))),\n    followers = followers$followers[ind - 1],\n    content = c(rep(\"dataviz\", 3), \"teaching\", \"teaching\")\n  ) %>%\n  select(time, full_text, favorite_count, ind, followers, content) %>%\n  slice(-c(2, 5))\n\npop_timeline <- map(pop_tweets$time, ~interval(start = . - hours(24), end = . + days(5))) %>% \n  map(~filter(followers, time %within% .)) %>% \n  map2(pop_tweets$content, ~mutate(.x, content = .y)) %>% \n  map2(1:3, ~mutate(.x, group = .y)) %>% \n  bind_rows()\n```\n:::\n\n::: {.cell fig.showtext='true'}\n\n```{.r .cell-code}\nstoryline <- \n  'Out of my **three most popular tweets**, two tweets have been<br> about data visualization. That\\'s not surprising.<br><br>But what I found interesting is that one tweet has been about teaching. Glad to see the #rstats community interested in that.'\n\nstoryline <- str_replace(\n  storyline, \n  'two tweets', \n  glue::glue('<span style = \"color:{color_palette[3]}\">**two tweets**</span>')\n)\n\nstoryline <- str_replace(\n  storyline, \n  'data visualization', \n  glue::glue('<span style = \"color:{color_palette[3]}\">**data visualization**</span>')\n)\n\nstoryline <- str_replace(\n  storyline, \n  'one tweet', \n  glue::glue('<span style = \"color:{color_palette[1]}\">**one tweet**</span>')\n)\n\nstoryline <- str_replace(\n  storyline, \n  'teaching', \n  glue::glue('<span style = \"color:{color_palette[1]}\">**teaching**</span>')\n)\n\nfollower_since_tracking <- recorded_followers$followers %>%  range()\nfollower_since_tracking <- follower_since_tracking[2] - follower_since_tracking[1]\ndays_since_tracking <- recorded_followers$time %>% range()\ndays_since_tracking <- as.numeric(days_since_tracking[2] - days_since_tracking[1])\nmonths_since_tracking <- janitor::round_to_fraction(days_since_tracking / 30, denominator = 4)\n\nsubtitle_text <- glue::glue('In the {months_since_tracking} months since I track my Twitter stats, {follower_since_tracking} new people have been following me.')\n\ncaption_text <- 'Viz by Albert Rapp (@rappa753)'\n\nbase_timeline +\n  geom_line(\n    data = pop_timeline,\n    aes(col = content, group = group),\n    size = 1.5\n  ) +\n  geom_rect(\n    data = pop_tweets,\n    aes(\n      xmin = time - hours(24),\n      xmax = time + days(5),\n      ymin = 0,\n      ymax = Inf,\n      col = content,\n      fill = content\n    ),\n    linetype = 3,\n    alpha = 0.25\n  ) +\n  geom_textbox(\n    data = slice(followers, 1),\n    x = make_datetime(2022),\n    y = 1000,\n    family = 'general_text',\n    col = interpolated_color,\n    label = storyline,\n    size = 6,\n    hjust = 0.75,\n    vjust = 1,\n    valign = 0.5,\n    halign = 0,\n    lineheight = 1.1,\n    width = unit(18, 'cm'),\n    height = unit(3.75, 'cm')\n  ) +\n  scale_fill_manual(values = color_palette[c(3, 1)]) +\n  scale_color_manual(values = color_palette[c(3, 1)]) +\n  labs(\n    subtitle = subtitle_text,\n    caption = caption_text\n  ) +\n  theme(\n    plot.subtitle = element_text(\n      margin = margin(b = 15, unit = 'mm'),\n      family = 'title_text',\n      size = 24,\n      color = interpolated_color\n    ),\n    plot.title = element_text(\n      family = 'title_text',\n      size = 42,\n      color = interpolated_color\n    ),\n    plot.caption = element_text(size = 14),\n    plot.background = element_rect(fill = 'white', colour = NA)\n  ) \n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}