<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Albert Rapp</title>
    <link>https://albert-rapp.de/</link>
    <description>Recent content on Albert Rapp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>blog@albert-rapp.de (Albert Rapp)</managingEditor>
    <webMaster>blog@albert-rapp.de (Albert Rapp)</webMaster>
    <copyright>Â©2021, This work is licensed under a <a href="https://creativecommons.org/licenses/by-nc/4.0/">CC BY-NC 4.0 license</a>.</copyright>
    <lastBuildDate>Sat, 11 Sep 2021 00:00:00 +0000</lastBuildDate>
    <sy:updatePeriod>daily</sy:updatePeriod>
    
        <atom:link href="https://albert-rapp.de/index.xml" rel="self" type="application/rss+xml" />
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>ggplot tips: Using position_stack() for Individual Positioning</title>
        <link>https://albert-rapp.de/post/2021-09-11-position-adjustment/</link>
        <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
        <author>blog@albert-rapp.de (Albert Rapp)</author>
        <atom:modified>Sat, 11 Sep 2021 00:00:00 +0000</atom:modified>
        <guid>https://albert-rapp.de/post/2021-09-11-position-adjustment/</guid>
        <description>For a long time I have wondered why some people would use position_stack() for position alignment instead of the simpler version position = &amp;quot;stack&amp;quot;. Recently, though, I learned the purpose of the former approach when I tried to add data labels to a stacked bar chart for better legibility.
Further, I decided that this knowledge is a good addition to this ggplot2-tips series, so let&amp;rsquo;s see what position_stack() can do. To achieve this, let us create a small dummy data set.</description>
        
        <dc:creator>Albert Rapp</dc:creator>
        
        
        
        
          
            
              <category>visualization</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>ggplot tips: Assigning Labels to an Aesthetic</title>
        <link>https://albert-rapp.de/post/2021-08-19-aesthetic-labels/</link>
        <pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate>
        <author>blog@albert-rapp.de (Albert Rapp)</author>
        <atom:modified>Thu, 19 Aug 2021 00:00:00 +0000</atom:modified>
        <guid>https://albert-rapp.de/post/2021-08-19-aesthetic-labels/</guid>
        <description>This blog post is part of a series I am creating where I collect tips I found useful when I first learned to work with ggplot2. All posts which are part of this series can be found here. In this post I want to deal with how to manually or automatically create labels for some aesthetic.
Manually Assigning Labels Assigning labels by hand, e.g. via col = &amp;quot;some label&amp;quot;, can be a great idea in some instances.</description>
        
        <dc:creator>Albert Rapp</dc:creator>
        
        
        
        
          
            
              <category>visualization</category>
            
          
        
        
        
          
            
              <category>ggplot2-tips</category>
            
          
        
      </item>
      
      <item>
        <title>Beginning a ggplot2 Series: Logarithmize Your Scales</title>
        <link>https://albert-rapp.de/post/2021-08-07-a-few-ggplot-tips/</link>
        <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
        <author>blog@albert-rapp.de (Albert Rapp)</author>
        <atom:modified>Sat, 07 Aug 2021 00:00:00 +0000</atom:modified>
        <guid>https://albert-rapp.de/post/2021-08-07-a-few-ggplot-tips/</guid>
        <description>It is not that long ago when I first encountered ggplot2 and decided to learn how to use it1. By no means do I think that I have sufficiently mastered this package yet but as time has passed I have certainly picked up a few tips on my journey to get better at creating more meaningful visualizations. So, in order to remind myself of and share what I learned, I decided to create a sort of series containing tips that enhanced my visualization skills.</description>
        
        <dc:creator>Albert Rapp</dc:creator>
        
        
        
        
          
            
              <category>visualization</category>
            
          
        
        
        
          
            
              <category>ggplot2-tips</category>
            
          
        
      </item>
      
      <item>
        <title>Is Success Luck or Hard Work?</title>
        <link>https://albert-rapp.de/post/2021-07-26-luck-vs-skill/</link>
        <pubDate>Wed, 28 Jul 2021 00:00:00 +0000</pubDate>
        <author>blog@albert-rapp.de (Albert Rapp)</author>
        <atom:modified>Wed, 28 Jul 2021 00:00:00 +0000</atom:modified>
        <guid>https://albert-rapp.de/post/2021-07-26-luck-vs-skill/</guid>
        <description>Recently, I decided to try out a few stretches in an effort to stay in shape during long stretches of working from home and not leaving the house. Also, to distract me from my inflexible body I thought I would watch a video on YouTube simultaneously and as luck would have it, I saw an interesting video on Veritasium&amp;rsquo;s YouTube Channel called &amp;ldquo;Is Success Luck or Hard Work&amp;rdquo;. Personally, I agree with a lot of things being said in that video and I recommend that you check out the video if you want to get a perspective on the role of luck compared to skill (or keep on reading for my own take on this topic).</description>
        
        <dc:creator>Albert Rapp</dc:creator>
        
        
        
        
          
            
              <category>simulation</category>
            
          
        
        
        
      </item>
      
      <item>
        <title>Animating kernel density estimators</title>
        <link>https://albert-rapp.de/post/visualize-kernel-density-estimation/</link>
        <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
        <author>blog@albert-rapp.de (Albert Rapp)</author>
        <atom:modified>Wed, 14 Jul 2021 00:00:00 +0000</atom:modified>
        <guid>https://albert-rapp.de/post/visualize-kernel-density-estimation/</guid>
        <description>For my first post on this blog I decided to create an animation using the animation package. To give this animation some purpose let me demonstrate how kernel density estimators work with the help of an animation.
In general, kernel density estimators are, as is kind of obvious by the name, used to estimate the underlying density of a random sample. For instance, imagine that we have a sample drawn from an some unknown distribution.</description>
        
        <dc:creator>Albert Rapp</dc:creator>
        
        
        
        
          
            
              <category>statistics</category>
            
          
            
              <category>visualization</category>
            
          
        
        
        
      </item>
      

    
  </channel>
</rss>
